---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/rooms":
    get:
      summary: Retrieves room list
      tags:
      - Rooms
      responses:
        '200':
          description: rooms found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Room"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      summary: Creates a room
      tags:
      - Rooms
      parameters: []
      responses:
        '201':
          description: room created
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Room"
  "/rooms/{id}":
    get:
      summary: Retrieves a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: room found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Room"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: room not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    patch:
      summary: Updates a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: room updated
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Room"
    delete:
      summary: Deletes a room
      tags:
      - Rooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: room deleted
        '401':
          description: unauthorized
        '404':
          description: room not found
  "/schedules":
    get:
      summary: Retrieves schedule list
      tags:
      - Schedules
      responses:
        '200':
          description: schedules found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Schedule"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      summary: Creates a schedule
      tags:
      - Schedules
      parameters: []
      responses:
        '201':
          description: schedule created
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Schedule"
  "/schedules/{id}":
    get:
      summary: Retrieves a schedule
      tags:
      - Schedules
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: schedule found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Schedule"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: schedule not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    patch:
      summary: Updates a schedule
      tags:
      - Schedules
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: schedule updated
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Schedule"
    delete:
      summary: Deletes a schedule
      tags:
      - Schedules
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: schedule deleted
        '401':
          description: unauthorized
        '404':
          description: schedule not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
security:
- bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        detail:
          type: object
      required:
      - message
    Room:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        opened_at:
          type: string
          format: time
        closed_at:
          type: string
          format: time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - opened_at
      - closed_at
      - created_at
      - updated_at
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        room_id:
          type: integer
        owner_id:
          type: string
          format: uuid
          readOnly: true
        owner_name:
          type: string
          readOnly: true
        started_at:
          type: string
          format: date-time
        ended_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - title
      - started_at
      - ended_at
